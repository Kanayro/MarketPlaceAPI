version: '3.1'

volumes:
  pg_marketplace:
  pg_order:

services:

  marketplace_db:
    image: postgres:16
    restart: always
    environment:
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
       POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_marketplace:/var/lib/postgresql/data

    ports:
      - "5432:5432"

  order_db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${POSTGRES_ORDER_DB}
    volumes:
      - pg_order:/var/lib/postgresql/data

    ports:
      - "5433:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs

  marketplace-service:
   build:
     context: ./marketplace-service
     dockerfile: Dockerfile
   ports:
      - "8080:8080"
   depends_on:
    - marketplace_db
    - kafka
   environment:
     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
     SPRING_DATASOURCE_URL: 'jdbc:postgresql://marketplace_db:5432/${POSTGRES_DB}'
     SPRING_FLYWAY_URL: 'jdbc:postgresql://marketplace_db:5432/${POSTGRES_DB}'

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://order_db:5432/${POSTGRES_ORDER_DB}'
      SPRING_FLYWAY_URL: 'jdbc:postgresql://order_db:5432/${POSTGRES_ORDER_DB}'
    depends_on:
     - order_db
     - kafka
    ports:
      - "8081:8081"



